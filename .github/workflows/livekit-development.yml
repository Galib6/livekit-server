# .github/workflows/deploy.yml
name: LiveKit Server Deployment

on:
  push:
    branches: [main]

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy LiveKit Server to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            echo "Creating deployment directory"
            mkdir -p ~/livekit-deployment
            cd ~/livekit-deployment

            echo "Creating necessary directories"
            mkdir -p config

            echo "Creating Dockerfile"
            cat <<EOF > Dockerfile
            FROM livekit/livekit-server:latest
            WORKDIR /app
            COPY config/livekit.template.yaml /app/livekit.template.yaml
            COPY generate-config.sh /app/generate-config.sh
            RUN chmod +x /app/generate-config.sh
            ENTRYPOINT ["/bin/sh", "-c", "/app/generate-config.sh && /livekit-server --config /app/livekit.yaml"]
            EOF

            echo "Creating docker-compose.yml"
            cat <<EOF > docker-compose.yml
            version: '3.8'
            services:
              livekit:
                build: .
                ports:
                  - "7880:7880"
                  - "7881:7881"
                  - "7882:7882/udp"
                env_file:
                  - .env
                restart: unless-stopped
            EOF

            echo "Creating generate-config.sh"
            cat <<EOF > generate-config.sh
            #!/bin/sh
            set -e
            if [ -z "\$API_KEY" ] || [ -z "\$API_SECRET" ]; then
              echo "❌ API_KEY or API_SECRET is missing!"
              exit 1
            fi
            sed "s/API_KEY/\${API_KEY}/g; s/API_SECRET/\${API_SECRET}/g" /app/livekit.template.yaml > /app/livekit.yaml
            echo "✅ livekit.yaml generated successfully!"
            EOF

            echo "Creating LiveKit template configuration"
            cat <<EOF > config/livekit.template.yaml
            port: 7880
            rtc:
              tcp_port: 7881
              udp_port: 7882
              use_external_ip: true
            keys:
              API_KEY: API_KEY
              API_SECRET: API_SECRET
            EOF

            echo "Creating .env file"
            cat <<EOF > .env
            API_KEY=${{ secrets.LIVEKIT_API_KEY }}
            API_SECRET=${{ secrets.LIVEKIT_API_SECRET }}
            EOF

            echo "Setting correct permissions"
            chmod +x generate-config.sh

            echo "Checking for Docker Compose"
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose"
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "Building and starting LiveKit server"
            docker-compose down || true
            docker-compose build --no-cache
            docker-compose up -d

            echo "Showing logs"
            docker-compose logs

            echo "LiveKit server deployment completed"